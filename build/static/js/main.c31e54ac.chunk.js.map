{"version":3,"sources":["services/httpService.js","services/authService.js","services/productService.js","services/categoryService.js","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/productsTable.jsx","components/common/pagination.jsx","components/common/listGroup.jsx","utils/paginate.js","components/common/searchBox.jsx","components/common/select.jsx","components/common/confirmationBox.jsx","components/products.jsx","components/common/form.jsx","components/common/input.jsx","components/productForm.jsx","components/navbar.jsx","services/customerService.js","components/customersTable.jsx","components/customers.jsx","components/customerForm.jsx","services/orderService.js","components/ordersTable.jsx","components/orders.jsx","components/common/autoCompleteBox.jsx","components/orderForm.jsx","components/orderPreviewForm.jsx","components/loginForm.jsx","components/logout.jsx","components/profile.jsx","components/registerForm.jsx","services/userService.js","components/notFound.jsx","components/common/protectedRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["axios","defaults","baseURL","process","interceptors","response","use","error","status","console","log","toast","Promise","reject","get","post","put","delete","setJwt","jwt","headers","common","email","password","a","http","data","localStorage","setItem","getJwt","getItem","login","logout","removeItem","getCurrentUser","token","jwtDecode","getProducts","getProduct","productId","saveProduct","product","_id","body","deleteProduct","getCategories","TableHeader","raiseSort","path","sortColumn","props","order","onSort","renderSortIcon","column","className","this","columns","map","key","onClick","label","Component","TableBody","renderCell","item","content","_","createKey","ProductsTable","Fragment","Link","to","onDelete","products","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","style","margin","display","page","ListGroup","items","selectedItem","textProperty","valueProperty","onItemSelect","defaultProps","paginate","pageNumber","startIndex","slice","take","value","SearchBox","onChange","name","type","placeholder","e","currentTarget","Select","options","htmlFor","id","option","ConfirmationBox","onCancel","onConfirm","visisble","Modal","isOpen","fade","ModalHeader","toggle","ModalBody","ModalFooter","Button","Products","state","categories","pageSizes","selectedCategory","searchQuery","modalVisible","productToDelete","handleDelete","auth","setState","toggleModal","doDelete","originalProducts","filter","p","visible","handleLike","index","indexOf","liked","handlePageChange","handlePageSizeChange","length","lastItem","parseInt","handleCategorySelect","category","handleSort","handleSearch","query","allProducts","filtered","toLowerCase","includes","orderBy","totalCount","getPagedData","onLike","Form","handleSubmit","preventDefault","errors","validate","doSubmit","handleChange","handleGoldToggle","isGold","result","Joi","schema","abortEarly","details","message","Input","labelSmall","ProductForm","categoryId","numberInStock","price","string","required","number","min","max","history","push","match","params","mapToViewModel","replace","populateWithCategories","populateWithProduct","onSubmit","NavBar","user","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavLink","getCustomers","getCustomer","customerId","saveCustomer","customer","deleteCustomer","CustomersTable","customers","Customers","customerToDelete","originalCustomers","c","sorted","CustomerForm","phone","address","allow","saveOrder","OrdersTable","orders","Orders","AutoCompleteBox","text","suggestions","onMouseDown","s","OrderForm","date","total","insufficientQty","itemsColumns","qty","handleQtyChange","array","handleProductSelect","totalPrice","calculateTotal","stock","success","sum","valueOf","textAlign","fontWeight","OrderPreviewForm","Login","username","window","location","Logout","Profile","Regitser","NotFound","ProtectedRoute","component","render","rest","Route","Redirect","App","Switch","LoginForm","RegisterForm","from","exact","paddingBottom","Boolean","hostname","ReactDOM","StrictMode","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.c31e54ac.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n  if (error.response && error.response.status >= 500) {\r\n    console.log(\"Logging the error: \", error);\r\n    toast.error(\"An unexpected error occurred.\");\r\n  }\r\n\r\n  return Promise.reject(error);\r\n});\r\n\r\nfunction setJwt(jwt) {\r\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n}\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  setJwt,\r\n};\r\n","import jwtDecode from \"jwt-decode\";\r\nimport http from \"./httpService\";\r\n\r\nconst endpoint = \"/logins\";\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(email, password) {\r\n  const { data: jwt } = await http.post(endpoint, { email, password });\r\n  localStorage.setItem(\"token\", jwt);\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(\"token\");\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const token = localStorage.getItem(\"token\");\r\n    return jwtDecode(token);\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction getJwt() {\r\n  return localStorage.getItem(\"token\");\r\n}\r\n\r\nexport default {\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n  getJwt,\r\n};\r\n","import http from \"./httpService\";\r\n\r\nconst endpoint = \"/products\";\r\n\r\nexport function getProducts() {\r\n  return http.get(endpoint);\r\n}\r\nexport function getProduct(productId) {\r\n  return http.get(`${endpoint}/${productId}`);\r\n}\r\n\r\nexport function saveProduct(product) {\r\n  if (product._id) {\r\n    const body = { ...product };\r\n    delete body._id;\r\n    return http.put(`${endpoint}/${product._id}`, body);\r\n  }\r\n\r\n  return http.post(endpoint, product);\r\n}\r\n\r\nexport function deleteProduct(productId) {\r\n  return http.delete(`${endpoint}/${productId}`);\r\n}\r\n","import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nconst endpoint = \"/categories\";\r\n\r\nexport function getCategories() {\r\n  return http.get(endpoint);\r\n}\r\n\r\nexport function getCategory(categoryId) {\r\n  return http.get(`${endpoint}/${categoryId}`);\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = (path) => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path)\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  renderSortIcon = (column) => {\r\n    const { sortColumn } = this.props;\r\n\r\n    if (column.path !== sortColumn.path) return null;\r\n\r\n    if (sortColumn.order === \"asc\")\r\n      return <i className=\"fa fa-sort-alpha-asc\"></i>;\r\n\r\n    return <i className=\"fa fa-sort-alpha-desc\"></i>;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.columns.map((column) => (\r\n            <th\r\n              className=\"clickable\"\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSort(column.path)}\r\n            >\r\n              {column.label} {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n    return _.get(item, column.path);\r\n  };\r\n\r\n  createKey = (item, column) => {\r\n    return item._id + (column.path || column.key);\r\n  };\r\n\r\n  render() {\r\n    const { data, columns } = this.props;\r\n\r\n    return (\r\n      <tbody>\r\n        {data.map((item) => (\r\n          <tr key={item._id}>\r\n            {columns.map((column) => (\r\n              <td key={this.createKey(item, column)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TableHeader from \"./common/tableHeader\";\r\nimport TableBody from \"./common/tableBody\";\r\nimport Like from \"./common/like\";\r\n\r\nclass ProductsTable extends Component {\r\n  columns = [\r\n    { path: \"name\", label: \"إسم المنتوج\" },\r\n    { path: \"category.name\", label: \"الفئة\" },\r\n    { path: \"numberInStock\", label: \"الكمية المتوفرة\" },\r\n    { path: \"price\", label: \"السعر\" },\r\n    //---Here in maysara I would like to hide the like column because liked field is not in the mongoDB database\r\n    // {\r\n    //   key: \"like\",\r\n    //   label: \"مرغوب\",\r\n    //   content: (product) => (\r\n    //     <Like\r\n    //       liked={product.liked}\r\n    //       onClick={() => this.props.onLike(product)}\r\n    //     ></Like>\r\n    //   ),\r\n    // },\r\n    {\r\n      key: \"edit-delete\",\r\n      content: (product) => (\r\n        <React.Fragment>\r\n          <Link\r\n            className=\"btn btn-primary btn-sm ml-2\"\r\n            to={`/products/${product._id}`}\r\n          >\r\n            تعديل\r\n          </Link>\r\n          <button\r\n            className=\"btn btn-danger btn-sm\"\r\n            onClick={() => this.props.onDelete(product)}\r\n          >\r\n            حذف\r\n          </button>\r\n        </React.Fragment>\r\n      ),\r\n    },\r\n  ];\r\n  render() {\r\n    const { products, onSort, sortColumn } = this.props;\r\n\r\n    return (\r\n      <table className=\"table table-bordered table-hover\">\r\n        <TableHeader\r\n          columns={this.columns}\r\n          sortColumn={sortColumn}\r\n          onSort={onSort}\r\n        ></TableHeader>\r\n        <TableBody data={products} columns={this.columns}></TableBody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductsTable;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\n\r\nconst Pagination = ({ itemsCount, pageSize, currentPage, onPageChange }) => {\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n\r\n  if (pagesCount === 1) return null;\r\n  const pages = _.range(1, pagesCount + 1);\r\n\r\n  return (\r\n    <nav style={{ margin: 0 }}>\r\n      <ul className=\"pagination\" style={{ display: \"inline\" }}>\r\n        <li\r\n          className={\r\n            currentPage === 1 ? \"page-item disabled\" : \"page-item clickable\"\r\n          }\r\n        >\r\n          <a\r\n            className=\"page-link\"\r\n            onClick={() => onPageChange(currentPage - 1)}\r\n          >\r\n            السابق\r\n          </a>\r\n        </li>\r\n\r\n        {pages.map((page) => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n          >\r\n            <a\r\n              className=\"page-link clickable\"\r\n              onClick={() => onPageChange(page)}\r\n            >\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n\r\n        <li\r\n          className={\r\n            currentPage === pagesCount\r\n              ? \"page-item disabled\"\r\n              : \"page-item clickable\"\r\n          }\r\n        >\r\n          <a\r\n            className=\"page-link\"\r\n            onClick={() => onPageChange(currentPage + 1)}\r\n          >\r\n            التالي\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nconst ListGroup = ({\r\n  items,\r\n  selectedItem,\r\n  textProperty,\r\n  valueProperty,\r\n  onItemSelect,\r\n}) => {\r\n  return (\r\n    <ul className=\"list-group clickable\">\r\n      {items.map((item) => (\r\n        <li\r\n          key={item[valueProperty]}\r\n          className={\r\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\r\n          }\r\n          onClick={() => onItemSelect(item)}\r\n        >\r\n          {item[textProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n  textProperty: \"name\",\r\n  valueProperty: \"_id\",\r\n};\r\n\r\nexport default ListGroup;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      name=\"query\"\r\n      type=\"text\"\r\n      value={value}\r\n      className=\"form-control\"\r\n      placeholder=\"بحث عن منتوج ...\"\r\n      onChange={(e) => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nconst Select = ({\r\n  name,\r\n  label = null,\r\n  value,\r\n  options,\r\n  error = null,\r\n  style = null,\r\n  onChange,\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\" style={style}>\r\n      <label htmlFor={name}>{label}</label>\r\n\r\n      <select\r\n        name={name}\r\n        id={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        className=\"form-control\"\r\n        style={style}\r\n      >\r\n        <option value=\"\" />\r\n\r\n        {options.map((option) => (\r\n          <option key={option.name} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\n\r\nconst ConfirmationBox = ({ onCancel, onConfirm, visisble }) => {\r\n  return (\r\n    <Modal isOpen={visisble} fade={false}>\r\n      <ModalHeader toggle={onCancel} />\r\n      <ModalBody>هل أنت متأكد من حذف هذا السجل؟</ModalBody>\r\n      <ModalFooter>\r\n        <Button onClick={onConfirm}>نعم متأكد</Button>\r\n        <Button onClick={onCancel}>لا</Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ConfirmationBox;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport auth from \"../services/authService\";\r\n// import { getProducts } from \"./../services/fakeProductService\";\r\n// import { getCategories } from \"./../services/fakeCategoryService\";\r\nimport { getProducts, deleteProduct } from \"./../services/productService\";\r\nimport { getCategories } from \"./../services/categoryService\";\r\nimport ProductsTable from \"./productsTable\";\r\nimport Pagination from \"./common/pagination\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport { paginate } from \"./../utils/paginate\";\r\nimport SearchBox from \"./common/searchBox\";\r\nimport Select from \"./common/select\";\r\nimport ConfirmationBox from \"./common/confirmationBox\";\r\n\r\nclass Products extends Component {\r\n  state = {\r\n    products: [],\r\n    categories: [],\r\n    pageSize: 4,\r\n    pageSizes: [\r\n      { id: 3, name: \"3\" },\r\n      { id: 4, name: \"4\" },\r\n      { id: 5, name: \"5\" },\r\n      { id: 6, name: \"الكل\" },\r\n    ],\r\n    currentPage: 1,\r\n    sortColumn: { path: \"name\", order: \"asc\" },\r\n    selectedCategory: null,\r\n    searchQuery: \"\",\r\n    modalVisible: false,\r\n    productToDelete: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { data: products } = await getProducts();\r\n    const { data } = await getCategories();\r\n    const categories = [...data, { _id: \"\", name: \"الكل\" }];\r\n\r\n    const selectedCategory = categories[categories.length - 1];\r\n\r\n    this.setState({ products, categories, selectedCategory });\r\n  }\r\n\r\n  handleDelete = (product) => {\r\n    if (!auth.getCurrentUser())\r\n      return toast(\"فقط المستخدم الأدمن يستطيع الحذف\");\r\n\r\n    this.setState({ productToDelete: product });\r\n    this.toggleModal();\r\n  };\r\n\r\n  doDelete = async () => {\r\n    const originalProducts = this.state.products;\r\n    const products = originalProducts.filter(\r\n      (p) => p._id !== this.state.productToDelete._id\r\n    );\r\n    this.setState({ products });\r\n\r\n    try {\r\n      await deleteProduct(this.state.productToDelete._id);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        toast.error(\"This product has been already deleted.\");\r\n\r\n      this.setState({ products: originalProducts });\r\n    }\r\n    this.toggleModal();\r\n  };\r\n\r\n  toggleModal = () => {\r\n    const visible = this.state.modalVisible;\r\n    this.setState({ modalVisible: !visible });\r\n  };\r\n\r\n  handleLike = (product) => {\r\n    const products = [...this.state.products];\r\n    const index = products.indexOf(product);\r\n    products[index] = { ...product }; //clone it before changing it\r\n    products[index].liked = !product.liked;\r\n\r\n    this.setState({ products });\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handlePageSizeChange = (e) => {\r\n    let pageSize = 0;\r\n    const pageSizes = [...this.state.pageSizes];\r\n\r\n    if (e.currentTarget.value === \"6\") {\r\n      pageSize = this.state.products.length;\r\n      const lastItem = { ...pageSizes[3] };\r\n      lastItem.id = pageSize;\r\n      pageSizes[3] = lastItem;\r\n    } else pageSize = parseInt(e.currentTarget.value);\r\n\r\n    this.setState({ pageSize, pageSizes });\r\n  };\r\n\r\n  handleCategorySelect = (category) => {\r\n    this.setState({\r\n      selectedCategory: category,\r\n      searchQuery: \"\",\r\n      currentPage: 1,\r\n    });\r\n  };\r\n\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  handleSearch = (query) => {\r\n    this.setState({\r\n      searchQuery: query,\r\n      selectedCategory: null,\r\n      currentPage: 1,\r\n    });\r\n  };\r\n\r\n  getPagedData() {\r\n    const {\r\n      products: allProducts,\r\n      selectedCategory,\r\n      currentPage,\r\n      pageSize,\r\n      sortColumn,\r\n      searchQuery,\r\n    } = this.state;\r\n\r\n    //filter -> sort -> paginate\r\n    let filtered = allProducts;\r\n    if (searchQuery)\r\n      filtered = allProducts.filter((p) =>\r\n        p.name.toLowerCase().includes(searchQuery.toLowerCase())\r\n      );\r\n    else {\r\n      filtered =\r\n        selectedCategory && selectedCategory._id\r\n          ? allProducts.filter((p) => p.category._id === selectedCategory._id)\r\n          : allProducts;\r\n    }\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const data = paginate(sorted, currentPage, pageSize);\r\n\r\n    return { totalCount: filtered.length, products: data };\r\n    //Note we did not set the state with new filtered array,\r\n    //we just return the new filtered array to render the table with its items\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentPage,\r\n      pageSize,\r\n      pageSizes,\r\n      categories,\r\n      selectedCategory,\r\n      sortColumn,\r\n      searchQuery,\r\n      modalVisible,\r\n    } = this.state;\r\n\r\n    const { totalCount, products } = this.getPagedData();\r\n\r\n    return (\r\n      <>\r\n        <div className=\"row\">\r\n          <div className=\"col-3\">\r\n            <p>هناك {totalCount} منتوجات من هذه الفئة</p>\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <Link to=\"/products/new\" className=\"btn btn-primary mb-2\">\r\n              إضافة منتوج جديد\r\n            </Link>\r\n          </div>\r\n          <div className=\"col\">\r\n            <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-3\">\r\n            <ListGroup\r\n              items={categories}\r\n              selectedItem={selectedCategory}\r\n              onItemSelect={this.handleCategorySelect}\r\n            ></ListGroup>\r\n          </div>\r\n          <div className=\"col\">\r\n            <ProductsTable\r\n              products={products}\r\n              onDelete={this.handleDelete}\r\n              onLike={this.handleLike}\r\n              onSort={this.handleSort}\r\n              sortColumn={sortColumn}\r\n            ></ProductsTable>\r\n          </div>\r\n        </div>\r\n        <div className=\"row justify-content-end\">\r\n          <div className=\"col-3\"></div>\r\n          <div className=\"col-9\">\r\n            <Pagination\r\n              itemsCount={totalCount}\r\n              pageSize={pageSize}\r\n              currentPage={currentPage}\r\n              onPageChange={this.handlePageChange}\r\n            ></Pagination>\r\n            <span className=\"mr-3 ml-2\">عدد السجلات</span>\r\n            <Select\r\n              options={pageSizes}\r\n              value={pageSize}\r\n              onChange={this.handlePageSizeChange}\r\n              style={{ display: \"inline-block\" }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <ConfirmationBox\r\n          onConfirm={this.doDelete}\r\n          onCancel={this.toggleModal}\r\n          visisble={modalVisible}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Products;\r\n","import { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\n\r\nclass Form extends Component {\r\n  state = {};\r\n\r\n  validate() {\r\n    const options = { abortEarly: false };\r\n    const result = Joi.validate(this.state.data, this.schema, options);\r\n    if (!result.error) return;\r\n    const errors = {};\r\n\r\n    for (let item of result.error.details) errors[item.path[0]] = item.message;\r\n\r\n    return errors;\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const data = { ...this.state.data };\r\n\r\n    data[e.currentTarget.name] = e.currentTarget.value;\r\n    this.setState({ data });\r\n  };\r\n\r\n  handleGoldToggle = () => {\r\n    const data = { ...this.state.data };\r\n    data.isGold = !data.isGold;\r\n    this.setState({ data });\r\n  };\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst Input = ({\r\n  name,\r\n  label,\r\n  labelSmall = \"\",\r\n  value,\r\n  error = null,\r\n  type = \"text\",\r\n  onChange,\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        id={name}\r\n        name={name}\r\n        value={value}\r\n        type={type}\r\n        className=\"form-control\"\r\n        onChange={onChange}\r\n      />\r\n      <small className=\"form-text text-muted\">{labelSmall}</small>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\n// import { getCategories } from \"./../services/fakeCategoryService\";\r\nimport { getCategories } from \"./../services/categoryService\";\r\n// import { getProduct } from \"./../services/fakeProductService\";\r\nimport { getProduct } from \"./../services/productService\";\r\n// import { saveProduct } from \"./../services/fakeProductService\";\r\nimport { saveProduct } from \"./../services/productService\";\r\nimport Form from \"./common/form\";\r\nimport Input from \"./common/input\";\r\nimport Select from \"./common/select\";\r\n\r\nclass ProductForm extends Form {\r\n  state = {\r\n    data: {\r\n      name: \"\",\r\n      categoryId: \"\",\r\n      numberInStock: \"\",\r\n      price: \"\",\r\n    },\r\n    categories: [],\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    name: Joi.string()\r\n      .required()\r\n      .error(() => {\r\n        return { message: \"إسم المنتوج مطلوب\" };\r\n      }),\r\n    categoryId: Joi.string()\r\n      .required()\r\n      .error(() => {\r\n        return { message: \"مطلوب تحديد فئة المنتوج\" };\r\n      }),\r\n    numberInStock: Joi.number()\r\n      .error(() => {\r\n        return { message: \"الرجاء إدخال رقم\" };\r\n      })\r\n      .min(1)\r\n      .max(100)\r\n      .error(() => {\r\n        return { message: \"يجب إدخال كمية بين 1 و 100\" };\r\n      }),\r\n    price: Joi.number()\r\n      .required()\r\n      .error(() => {\r\n        return { message: \"الرجاء إدخال رقم\" };\r\n      }),\r\n  };\r\n\r\n  async populateWithCategories() {\r\n    const { data: categories } = await getCategories();\r\n    this.setState({ categories });\r\n  }\r\n  async populateWithProduct() {\r\n    try {\r\n      const productId = this.props.match.params.id;\r\n      if (productId === \"new\") return;\r\n\r\n      const { data: product } = await getProduct(productId);\r\n      this.setState({ data: this.mapToViewModel(product) });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        this.props.history.replace(\"/not-found\");\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.populateWithCategories();\r\n    await this.populateWithProduct();\r\n  }\r\n  mapToViewModel(product) {\r\n    return {\r\n      _id: product._id,\r\n      name: product.name,\r\n      categoryId: product.category._id,\r\n      numberInStock: product.numberInStock,\r\n      price: product.price,\r\n    };\r\n  }\r\n\r\n  doSubmit = async () => {\r\n    await saveProduct(this.state.data);\r\n    this.props.history.push(\"/products\");\r\n  };\r\n\r\n  render() {\r\n    const { data, categories, errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"col-5\">\r\n        <h3>نموذج إدخال أو تحديث منتوج</h3>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <Input\r\n            name=\"name\"\r\n            label=\"إسم المنتوج\"\r\n            value={data.name}\r\n            error={errors.name}\r\n            onChange={this.handleChange}\r\n          />\r\n          <Select\r\n            name=\"categoryId\"\r\n            label=\"فئة المنتوج\"\r\n            value={data.categoryId}\r\n            options={categories}\r\n            error={errors.categoryId}\r\n            onChange={this.handleChange}\r\n          />\r\n          <Input\r\n            name=\"numberInStock\"\r\n            label=\"الكمية المتوفرة\"\r\n            value={data.numberInStock}\r\n            error={errors.numberInStock}\r\n            onChange={this.handleChange}\r\n          />\r\n          <Input\r\n            name=\"price\"\r\n            label=\"السعر\"\r\n            value={data.price}\r\n            error={errors.price}\r\n            onChange={this.handleChange}\r\n          />\r\n          <button className=\"btn btn-primary\">حفظ</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductForm;\r\n","import React from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\n\r\nconst NavBar = ({ user }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        شركة الميسرة\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item active\">\r\n            <NavLink className=\"nav-link\" to=\"/products\">\r\n              المنتوجات <span className=\"sr-only\">(current)</span>\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/customers\">\r\n              الزبائن\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/orders\">\r\n              المبيعات\r\n            </NavLink>\r\n          </li>\r\n          {!user && (\r\n            <>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/login\">\r\n                  دخول\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/register\">\r\n                  حساب جديد\r\n                </NavLink>\r\n              </li>\r\n            </>\r\n          )}\r\n          {user && (\r\n            <>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/profile\">\r\n                  مرحباً {user.name}\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/logout\">\r\n                  خروج\r\n                </NavLink>\r\n              </li>\r\n            </>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import http from \"./httpService\";\r\n\r\nconst endpoint = \"/customers\";\r\n\r\nexport function getCustomers() {\r\n  return http.get(endpoint);\r\n}\r\nexport function getCustomer(customerId) {\r\n  return http.get(`${endpoint}/${customerId}`);\r\n}\r\n\r\nexport function saveCustomer(customer) {\r\n  if (customer._id) {\r\n    const body = { ...customer };\r\n    delete body._id;\r\n    return http.put(`${endpoint}/${customer._id}`, body);\r\n  }\r\n\r\n  return http.post(endpoint, customer);\r\n}\r\n\r\nexport function deleteCustomer(customerId) {\r\n  return http.delete(`${endpoint}/${customerId}`);\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TableHeader from \"./common/tableHeader\";\r\nimport TableBody from \"./common/tableBody\";\r\n\r\nclass CustomersTable extends Component {\r\n  columns = [\r\n    { path: \"name\", label: \"الاسم\" },\r\n    { path: \"phone\", label: \"رقم الهاتف\" },\r\n    { path: \"address\", label: \"العنوان\" },\r\n    {\r\n      key: \"edit-delete\",\r\n      content: (customer) => (\r\n        <React.Fragment>\r\n          <Link\r\n            className=\"btn btn-primary btn-sm ml-2\"\r\n            to={`/customers/${customer._id}`}\r\n          >\r\n            تعديل\r\n          </Link>\r\n          <button\r\n            className=\"btn btn-danger btn-sm\"\r\n            onClick={() => this.props.onDelete(customer)}\r\n          >\r\n            حذف\r\n          </button>\r\n        </React.Fragment>\r\n      ),\r\n    },\r\n  ];\r\n  render() {\r\n    const { customers, onSort, sortColumn } = this.props;\r\n\r\n    return (\r\n      <table className=\"table table-bordered table-hover\">\r\n        <TableHeader\r\n          columns={this.columns}\r\n          sortColumn={sortColumn}\r\n          onSort={onSort}\r\n        />\r\n        <TableBody data={customers} columns={this.columns} />\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomersTable;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n// import {\r\n//   getCustomers,\r\n//   deleteCustomer,\r\n// } from \"./../services/fakeCustomerService\";\r\nimport { getCustomers, deleteCustomer } from \"./../services/customerService\";\r\nimport { paginate } from \"./../utils/paginate\";\r\nimport Pagination from \"./common/pagination\";\r\nimport CustomersTable from \"./customersTable\";\r\nimport ConfirmationBox from \"./common/confirmationBox\";\r\n\r\nclass Customers extends Component {\r\n  state = {\r\n    customers: [],\r\n    pageSize: 5,\r\n    currentPage: 1,\r\n    sortColumn: { path: \"name\", order: \"asc\" },\r\n    modalVisible: false,\r\n    customerToDelete: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { data: customers } = await getCustomers();\r\n    this.setState({ customers });\r\n  }\r\n\r\n  handleDelete = (customer) => {\r\n    this.setState({ customerToDelete: customer });\r\n    this.toggleModal();\r\n  };\r\n\r\n  doDelete = async () => {\r\n    const originalCustomers = this.state.customers;\r\n    const customers = originalCustomers.filter(\r\n      (c) => c._id !== this.state.customerToDelete._id\r\n    );\r\n    this.setState({ customers });\r\n\r\n    try {\r\n      await deleteCustomer(this.state.customerToDelete._id);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        toast(\"This customer has been already deleted.\");\r\n\r\n      this.setState({ customers: originalCustomers });\r\n    }\r\n\r\n    this.toggleModal();\r\n  };\r\n\r\n  toggleModal = () => {\r\n    const visible = this.state.modalVisible;\r\n    this.setState({ modalVisible: !visible });\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  getPagedData() {\r\n    const { customers, currentPage, pageSize, sortColumn } = this.state;\r\n    const sorted = _.orderBy(customers, [sortColumn.path], [sortColumn.order]);\r\n    const data = paginate(sorted, currentPage, pageSize);\r\n\r\n    return { totalCount: sorted.length, customers: data };\r\n  }\r\n\r\n  render() {\r\n    const { currentPage, pageSize, sortColumn } = this.state;\r\n    const { totalCount, customers } = this.getPagedData();\r\n\r\n    if (totalCount === 0) return <p>لا يوجد زبائن في قاعدة البيانات</p>;\r\n    return (\r\n      <>\r\n        <p>يظهر {totalCount} من الزبائن في قاعدة البيانات</p>\r\n\r\n        <Link to=\"/customers/new\" className=\"btn btn-primary mb-2\">\r\n          إضافة زبون جديد\r\n        </Link>\r\n\r\n        <CustomersTable\r\n          customers={customers}\r\n          onDelete={this.handleDelete}\r\n          onSort={this.handleSort}\r\n          sortColumn={sortColumn}\r\n        ></CustomersTable>\r\n\r\n        <Pagination\r\n          itemsCount={totalCount}\r\n          pageSize={pageSize}\r\n          currentPage={currentPage}\r\n          onPageChange={this.handlePageChange}\r\n        ></Pagination>\r\n        <ConfirmationBox\r\n          onConfirm={this.doDelete}\r\n          onCancel={this.toggleModal}\r\n          visisble={this.state.modalVisible}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Customers;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\n// import { getCustomer, saveCustomer } from \"./../services/fakeCustomerService\";\r\nimport { getCustomer, saveCustomer } from \"./../services/customerService\";\r\nimport Form from \"./common/form\";\r\nimport Input from \"./common/input\";\r\n\r\nclass CustomerForm extends Form {\r\n  state = {\r\n    data: {\r\n      name: \"\",\r\n      phone: \"\",\r\n      address: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    name: Joi.string()\r\n      .required()\r\n      .error(() => {\r\n        return { message: \"إسم الزبون مطلوب\" };\r\n      }),\r\n    phone: Joi.string().allow(\"\").allow(null),\r\n    address: Joi.string().allow(\"\").allow(null),\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const customerId = this.props.match.params.id;\r\n    if (customerId === \"new\") return;\r\n\r\n    const { data: customer } = await getCustomer(customerId);\r\n    if (!customer) return this.props.history.replace(\"/customers\");\r\n\r\n    this.setState({ data: this.mapToViewModel(customer) });\r\n  }\r\n\r\n  mapToViewModel = (customer) => {\r\n    return {\r\n      _id: customer._id,\r\n      name: customer.name,\r\n      phone: customer.phone,\r\n      address: customer.address,\r\n    };\r\n  };\r\n\r\n  async doSubmit() {\r\n    await saveCustomer(this.state.data);\r\n    this.props.history.push(\"/customers\");\r\n  }\r\n\r\n  render() {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <div className=\"col-5\">\r\n        <h3>نموذج إدخال أو تحديث زبون</h3>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <Input\r\n            name=\"name\"\r\n            label=\"الإسم\"\r\n            value={data.name}\r\n            error={errors.name}\r\n            onChange={this.handleChange}\r\n          />\r\n          <Input\r\n            name=\"phone\"\r\n            label=\"رقم الهاتف\"\r\n            value={data.phone}\r\n            error={errors.phone}\r\n            onChange={this.handleChange}\r\n          />\r\n\r\n          <Input\r\n            name=\"address\"\r\n            label=\"العنوان\"\r\n            value={data.address}\r\n            error={errors.address}\r\n            onChange={this.handleChange}\r\n          />\r\n\r\n          <button className=\"btn btn-primary\">حفظ</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomerForm;\r\n","import http from \"./httpService\";\r\n\r\nconst endpoint = \"/orders\";\r\n\r\nexport function getOrders() {\r\n  return http.get(endpoint);\r\n}\r\nexport function getOrder(orderId) {\r\n  return http.get(`${endpoint}/${orderId}`);\r\n}\r\n\r\nexport function saveOrder(order) {\r\n  if (order._id) {\r\n    const body = { ...order };\r\n    delete body._id;\r\n    return http.put(`${endpoint}/${order._id}`, body);\r\n  }\r\n\r\n  return http.post(endpoint, order);\r\n}\r\n\r\nexport function deleteOrder(orderId) {\r\n  return http.delete(`${endpoint}/${orderId}`);\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TableHeader from \"./common/tableHeader\";\r\nimport TableBody from \"./common/tableBody\";\r\n\r\nclass OrdersTable extends Component {\r\n  columns = [\r\n    // { path: \"_id\", label: \"الرقم\" },\r\n    { path: \"date\", label: \"التاريخ\" },\r\n    { path: \"customer.name\", label: \"الزبون\" },\r\n    { path: \"customer.phone\", label: \"رقم الهاتف\" },\r\n    {\r\n      path: \"orderedItems\",\r\n      label: \"المواد\",\r\n      content: (order) => (\r\n        <ul>\r\n          {order.items.map((item) => (\r\n            <li key={item._id}>{item.name}</li>\r\n          ))}\r\n        </ul>\r\n      ),\r\n    },\r\n    { path: \"total\", label: \"إجمالي الفاتورة\" },\r\n    {\r\n      key: \"preview\",\r\n      content: (order) => (\r\n        <Link\r\n          className=\"btn btn-primary btn-sm ml-2\"\r\n          to={`/orders/preview/${order._id}`}\r\n        >\r\n          معاينة\r\n        </Link>\r\n      ),\r\n    },\r\n  ];\r\n  render() {\r\n    const { orders, onSort, sortColumn } = this.props;\r\n\r\n    return (\r\n      <table className=\"table table-bordered table-hover\">\r\n        <TableHeader\r\n          columns={this.columns}\r\n          sortColumn={sortColumn}\r\n          onSort={onSort}\r\n        />\r\n        <TableBody data={orders} columns={this.columns} />\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OrdersTable;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"react-router-dom\";\r\n// import { getOrders } from \"./../services/fakeOrderService\";\r\nimport { getOrders } from \"./../services/orderService\";\r\nimport { paginate } from \"./../utils/paginate\";\r\nimport Pagination from \"./common/pagination\";\r\nimport OrdersTable from \"./ordersTable\";\r\n\r\nclass Orders extends Component {\r\n  state = {\r\n    orders: [],\r\n    pageSize: 3,\r\n    currentPage: 1,\r\n    sortColumn: { path: \"date\", order: \"asc\" },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { data: orders } = await getOrders();\r\n    this.setState({ orders });\r\n  }\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  getPagedData() {\r\n    const { orders, currentPage, pageSize, sortColumn } = this.state;\r\n    const sorted = _.orderBy(orders, [sortColumn.path], [sortColumn.order]);\r\n    const data = paginate(sorted, currentPage, pageSize);\r\n\r\n    return { totalCount: sorted.length, orders: data };\r\n  }\r\n\r\n  render() {\r\n    const { currentPage, pageSize, sortColumn } = this.state;\r\n    const { totalCount, orders } = this.getPagedData();\r\n\r\n    if (totalCount === 0) return <p>لا يوجد فواتير في قاعدة البيانات</p>;\r\n    return (\r\n      <>\r\n        <p>يظهر {totalCount} من الفواتير في قاعدة البيانات</p>\r\n\r\n        <Link to=\"/orders/new\" className=\"btn btn-primary mb-2\">\r\n          إضافة فاتورة جديدة\r\n        </Link>\r\n\r\n        <OrdersTable\r\n          orders={orders}\r\n          onDelete={this.handleDelete}\r\n          onSort={this.handleSort}\r\n          sortColumn={sortColumn}\r\n        />\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <Pagination\r\n              itemsCount={totalCount}\r\n              pageSize={pageSize}\r\n              currentPage={currentPage}\r\n              onPageChange={this.handlePageChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Orders;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class AutoCompleteBox extends Component {\r\n  state = {\r\n    text: \"\",\r\n    placeholder: \"أدخل حرفين أو اكثر ...\",\r\n    suggestions: [],\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const text = e.currentTarget.value;\r\n    this.setState({ text });\r\n\r\n    if (text.length <= 1) this.setState({ suggestions: [] });\r\n    else {\r\n      const suggestions = this.props.items.filter((p) =>\r\n        p.name.toLowerCase().includes(text.toLowerCase())\r\n      );\r\n      this.setState({ suggestions });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { text, placeholder, suggestions } = this.state;\r\n    const { onItemSelect } = this.props;\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"product\">المنتوج</label>\r\n        <input\r\n          id=\"product\"\r\n          type=\"text\"\r\n          value={text}\r\n          className=\"form-control\"\r\n          placeholder={placeholder}\r\n          onChange={this.handleChange}\r\n          onMouseDown={() => this.setState({ text: \"\", placeholder: \"\" })}\r\n        />\r\n        <ul className=\"list-group\">\r\n          {suggestions.map((s) => (\r\n            <li\r\n              key={s.id}\r\n              className=\"list-group-item clickable\"\r\n              onClick={() => {\r\n                this.setState({ text: s.name, suggestions: [] });\r\n                onItemSelect(s);\r\n              }}\r\n            >\r\n              {s.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport { toast } from \"react-toastify\";\r\n// import { getCustomers } from \"./../services/fakeCustomerService\";\r\n// import { saveOrder } from \"./../services/fakeOrderService\";\r\n// import { getProducts, getProduct } from \"./../services/fakeProductService\";\r\nimport { getCustomers } from \"./../services/customerService\";\r\nimport { saveOrder } from \"./../services/orderService\";\r\nimport { getProducts, getProduct } from \"./../services/productService\";\r\nimport Form from \"./common/form\";\r\nimport Input from \"./common/input\";\r\nimport Select from \"./common/select\";\r\nimport TableHeader from \"./common/tableHeader\";\r\nimport TableBody from \"./common/tableBody\";\r\nimport AutoCompleteBox from \"./common/autoCompleteBox\";\r\n\r\nclass OrderForm extends Form {\r\n  state = {\r\n    data: {\r\n      date: \"\",\r\n      customerId: \"\",\r\n      items: [],\r\n      total: \"\",\r\n    },\r\n    customers: [],\r\n    products: [],\r\n    errors: {},\r\n\r\n    searchQuery: \"\",\r\n    insufficientQty: false,\r\n  };\r\n\r\n  itemsColumns = [\r\n    { path: \"name\", label: \"المادة\" },\r\n    {\r\n      path: \"qty\",\r\n      label: \"الكمية المطلوبة\",\r\n      content: (item) => (\r\n        <input\r\n          className=\"form-control\"\r\n          type=\"number\"\r\n          min={1}\r\n          max={100}\r\n          value={item.qty}\r\n          onChange={(e) => this.handleQtyChange(e, item)}\r\n        />\r\n      ),\r\n    },\r\n    { path: \"price\", label: \"السعر\" },\r\n    {\r\n      path: \"totalPrice\",\r\n      label: \"السعر الكلي\",\r\n    },\r\n    {\r\n      key: \"delete-item\",\r\n      label: \"\",\r\n      content: (item) => (\r\n        <button\r\n          className=\"btn btn-danger btn-sm\"\r\n          onClick={() => this.handleDelete(item.productId)}\r\n        >\r\n          X\r\n        </button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    date: Joi.date()\r\n      .required()\r\n      .error(() => {\r\n        return { message: \"مطلوب تحديد التاريخ\" };\r\n      }),\r\n    customerId: Joi.string()\r\n      .required()\r\n      .error(() => {\r\n        return { message: \"مطلوب تحديد زبون\" };\r\n      }),\r\n    items: Joi.array(),\r\n    total: Joi.number(),\r\n  };\r\n  /*\r\n  // handleProductSelect = (e) => {\r\n  //   const productId = e.currentTarget.value;\r\n  //   const product = getProduct(productId);\r\n  //   const order = this.state.data;\r\n  //   const orderItem = {\r\n  //     id: product.id,\r\n  //     name: product.name,\r\n  //     qty: 1, //initial value\r\n  //     price: product.price,\r\n  //     totalPrice: product.price, //initial value\r\n  //   };\r\n  //   order.orderedItems.push(orderItem);\r\n  //   order.total = this.calculateTotal();\r\n\r\n  //   this.setState({ data: order });\r\n  // }; */\r\n\r\n  async componentDidMount() {\r\n    const { data: customers } = await getCustomers();\r\n    const { data: products } = await getProducts();\r\n    this.setState({ customers, products });\r\n  }\r\n\r\n  handleProductSelect = (product) => {\r\n    const order = this.state.data;\r\n    const item = {\r\n      productId: product._id,\r\n      name: product.name,\r\n      qty: 1,\r\n      price: product.price,\r\n      totalPrice: product.price,\r\n    };\r\n    order.items.push(item);\r\n    order.total = this.calculateTotal();\r\n\r\n    this.setState({ data: order });\r\n  };\r\n\r\n  handleQtyChange = async (e, item) => {\r\n    const order = { ...this.state.data };\r\n    const items = order.items;\r\n\r\n    const index = items.indexOf(item);\r\n    items[index] = { ...item };\r\n\r\n    const qty = parseInt(e.currentTarget.value, 10);\r\n\r\n    const stock = await getProduct(item.productId).numberInStock;\r\n\r\n    if (qty > stock) {\r\n      toast(`الرصيد غير كافي. الكمية المتوفرة:  ${stock}`);\r\n      return;\r\n    }\r\n\r\n    items[index].qty = qty;\r\n    items[index].totalPrice = qty * items[index].price;\r\n\r\n    order.total = this.calculateTotal();\r\n\r\n    this.setState({ data: order });\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    const { data: order } = await saveOrder(this.state.data);\r\n    if (!order._id) {\r\n      toast.error(\"هناك خطأ أدى لفشل حفظ الفاتورة\");\r\n      return;\r\n    }\r\n    toast.success(\"تم حفظ الفاتورة بنجاح\");\r\n    this.props.history.push(\"/orders\");\r\n  };\r\n\r\n  handleDelete = (id) => {\r\n    const order = this.state.data;\r\n    const items = [...order.items];\r\n    order.items = items.filter((item) => item.productId !== id);\r\n    order.total = this.calculateTotal();\r\n\r\n    this.setState({ data: order });\r\n  };\r\n\r\n  calculateTotal() {\r\n    let sum = 0;\r\n    for (let item of this.state.data.items) sum += item.totalPrice.valueOf();\r\n    return sum;\r\n  }\r\n  render() {\r\n    const { data, customers, products, errors, searchQuery } = this.state;\r\n    return (\r\n      <div>\r\n        <h3>نموذج إدخال أو تحديث فاتورة </h3>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-4\">\r\n              <Input\r\n                name=\"date\"\r\n                label=\"التاريخ\"\r\n                value={data.date}\r\n                error={errors.date}\r\n                onChange={this.handleChange}\r\n              />\r\n              <Select\r\n                name=\"customerId\"\r\n                label=\"الزبون\"\r\n                value={data.customerId}\r\n                options={customers}\r\n                error={errors.customerId}\r\n                onChange={this.handleChange}\r\n              />\r\n              <AutoCompleteBox\r\n                items={products}\r\n                onItemSelect={this.handleProductSelect}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <table className=\"table table-bordered\">\r\n            <TableHeader\r\n              columns={this.itemsColumns}\r\n              sortColumn={{ path: \"\" }}\r\n              onSort={() => null}\r\n            />\r\n            <TableBody data={data.items} columns={this.itemsColumns} />\r\n          </table>\r\n          <p\r\n            style={{ textAlign: \"left\", fontWeight: \"bold\" }}\r\n          >{`المجموع الكلي:  ${data.total}`}</p>\r\n          <button className=\"btn btn-primary\">حفظ</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OrderForm;\r\n","import React from \"react\";\r\n\r\nconst OrderPreviewForm = ({ match }) => {\r\n  return <h2>{`معاينة الفاتورة رقم  ${match.params.id}`}</h2>;\r\n};\r\n\r\nexport default OrderPreviewForm;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport auth from \"../services/authService\";\r\nimport Input from \"./common/input\";\r\nimport Form from \"./common/form\";\r\n\r\nclass Login extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string()\r\n      .required()\r\n      .error(() => {\r\n        return { message: \"إسم المستخدم مطلوب\" };\r\n      }),\r\n    password: Joi.string()\r\n      .min(3)\r\n      .error(() => {\r\n        return { message: \"كلمة المرور مطلوبة على الأقل 3 أحرف\" };\r\n      }),\r\n  };\r\n\r\n  async doSubmit() {\r\n    try {\r\n      const { username, password } = this.state.data;\r\n      await auth.login(username, password);\r\n      window.location = \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <div className=\"col-5\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <Input\r\n            name=\"username\"\r\n            label=\"إسم المستخدم\"\r\n            value={data.username}\r\n            error={errors.username}\r\n            labelSmall=\"بريدك الالكتروني\"\r\n            onChange={this.handleChange}\r\n          />\r\n          <Input\r\n            name=\"password\"\r\n            label=\"كلمة المرور\"\r\n            value={data.password}\r\n            error={errors.password}\r\n            onChange={this.handleChange}\r\n          />\r\n          <button className=\"btn btn-primary\">دخول</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import { Component } from \"react\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    auth.logout();\r\n    window.location = \"/\";\r\n  }\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React from \"react\";\r\n\r\nconst Profile = () => {\r\n  return <h1>User profile here</h1>;\r\n};\r\n\r\nexport default Profile;\r\n","import React, { Component } from \"react\";\r\nimport { register } from \"../services/userService\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./common/input\";\r\nimport Form from \"./common/form\";\r\n\r\nclass Regitser extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\", name: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string()\r\n      .required()\r\n      .error(() => {\r\n        return { message: \"إسم المستخدم مطلوب\" };\r\n      }),\r\n    password: Joi.string()\r\n      .min(3)\r\n      .error(() => {\r\n        return { message: \"كلمة المرور مطلوبة على الأقل 3 أحرف\" };\r\n      }),\r\n    name: Joi.string()\r\n      .required()\r\n      .error(() => {\r\n        return { message: \"اسمك الذي تُعرف به في الموقع مطلوب\" };\r\n      }),\r\n  };\r\n\r\n  async doSubmit() {\r\n    try {\r\n      const response = await register(this.state.data);\r\n      localStorage.setItem(\"token\", response.headers[\"x-auth-token\"]);\r\n      this.props.history.push(\"/\");\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = error.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <div className=\"col-5\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <Input\r\n            name=\"username\"\r\n            label=\"إسم المستخدم\"\r\n            value={data.username}\r\n            error={errors.username}\r\n            labelSmall=\"بريدُك الالكتروني\"\r\n            onChange={this.handleChange}\r\n          />\r\n          <Input\r\n            name=\"password\"\r\n            label=\"كلمة المرور\"\r\n            value={data.password}\r\n            error={errors.password}\r\n            onChange={this.handleChange}\r\n          />\r\n          <Input\r\n            name=\"name\"\r\n            label=\"الإسم\"\r\n            value={data.name}\r\n            error={errors.name}\r\n            labelSmall=\"إسمُك الذي تودّ أن يظهر في الموقع\"\r\n            onChange={this.handleChange}\r\n          />\r\n          <button className=\"btn btn-primary\">تسجيل</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Regitser;\r\n","import http from \"./httpService\";\r\n\r\nconst endpoint = \"/users\";\r\n\r\nexport function register(user) {\r\n  return http.post(endpoint, {\r\n    email: user.username, //we didn't pass user directly because of the naming difference (username at the client is email at the server)\r\n    password: user.password,\r\n    name: user.name,\r\n  });\r\n}\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return <h1>Not Found</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport auth from \"../../services/authService\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!auth.getCurrentUser()) return <Redirect to=\"/login\" />;\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Component } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport auth from \"./services/authService\";\nimport Products from \"./components/products\";\nimport ProductForm from \"./components/productForm\";\nimport NavBar from \"./components/navbar\";\nimport Customers from \"./components/customers\";\nimport CustomerForm from \"./components/customerForm\";\nimport Orders from \"./components/orders\";\nimport OrderForm from \"./components/orderForm\";\nimport OrderPreviewForm from \"./components/orderPreviewForm\";\nimport LoginForm from \"./components/loginForm\";\nimport Logout from \"./components/logout\";\nimport Profile from \"./components/profile\";\nimport RegisterForm from \"./components/registerForm\";\nimport NotFound from \"./components/notFound\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {};\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n  render() {\n    const { user } = this.state;\n    return (\n      <>\n        <ToastContainer />\n        <header>\n          <NavBar user={user} />\n        </header>\n        <main className=\"container\">\n          <Switch>\n            <ProtectedRoute path=\"/products/:id\" component={ProductForm} />\n            <Route path=\"/products\" component={Products} />} />\n            <Route path=\"/customers/:id\" component={CustomerForm} />\n            <Route path=\"/customers\" component={Customers} />\n            <Route path=\"/orders/preview/:id\" component={OrderPreviewForm} />\n            <ProtectedRoute path=\"/orders/:id\" component={OrderForm} />\n            <Route path=\"/orders\" component={Orders} />\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/profile\" component={Profile} />\n            <Route path=\"/register\" component={RegisterForm} />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect from=\"/\" exact to=\"/products\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n        <hr />\n        <footer>\n          <p style={{ textAlign: \"center\", paddingBottom: 20 }}>2020 &copy;</p>\n        </footer>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./bootstrap-rtl.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}